name: Frontend Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Update package version
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          # Remove 'v' prefix if present
          VERSION=${VERSION#v}
          # Ensure version has proper format (MAJOR.MINOR.PATCH)
          if [[ $VERSION =~ ^[0-9]+\.[0-9]+$ ]]; then
            VERSION="${VERSION}.0"
          fi
          npm version $VERSION --no-git-tag-version

      - name: Generate changelog
        id: changelog
        run: |
          npm install -g conventional-changelog-cli
          conventional-changelog -p angular -i CHANGELOG.md -s -r 0
          
          VERSION="${{ steps.version.outputs.version }}"
          CHANGELOG=$(awk "/^## \[$VERSION\]/,/^## \[/" CHANGELOG.md | sed '$d' || echo "No changelog entries found for this version")
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Commit version updates
        run: |
          git add package.json CHANGELOG.md
          git commit -m "chore: bump version to ${{ steps.version.outputs.version }}"
          # Ensure prod branch exists and push
          git fetch origin prod || true
          git push origin HEAD:prod

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Frontend Release ${{ steps.version.outputs.version }}
          body: |
            ## Frontend Changes
            
            ${{ steps.changelog.outputs.changelog }}
            
            ## Deployment
            
            This release will automatically trigger deployment to production via Google Cloud Build.
          draft: false
          prerelease: false

      - name: Deployment
        run: |
          echo "Frontend deployment will be triggered automatically by the push to prod branch"
          echo "Google Cloud Build trigger will handle the frontend deployment process"